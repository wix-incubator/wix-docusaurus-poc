@mixin commonBorder($where, $color) {
  border-#{$where}: 1px solid $color;
  border-#{$where}-left-radius: 4px;
  border-#{$where}-right-radius: 4px;
}

.row {
  display: flex;
  padding: 25px 24px;
  box-sizing: border-box;
  border-top: none;

  &.pointerCursor {
    cursor: pointer;
  }

  &.light {
    border-bottom: 1px solid var(--d-65);
    border-right: 1px solid var(--d-65);
    border-left: 1px solid var(--d-65);
    &.first {
      @include commonBorder("top", var(--d-65));

      &.isFirstOneOf{
        border-top-right-radius: 0;
        border-top-left-radius: 0;
      }
    }

    &:last-of-type {
      @include commonBorder("bottom", var(--d-65));
    }

    &.roundBelow {
      @include commonBorder("bottom", var(--d-65));
    }
    &.beforeOneOf{
      @include commonBorder("bottom", var(--d-65));
    }
  }

  &.dark {
    border-bottom: 1px solid var(--d-30);
    border-right: 1px solid var(--d-30);
    border-left: 1px solid var(--d-30);

    &.first {
      @include commonBorder("top", var(--d-30));

      &.isFirstOneOf{
        border-top-right-radius: 0;
        border-top-left-radius: 0;
      }
    }

    &:last-of-type {
      @include commonBorder("bottom", var(--d-30));
    }

    &.round-below {
      @include commonBorder("bottom", var(--d-30));
    }
    &.beforeOneOf{
      @include commonBorder("bottom", var(--d-30));
    }
  }
}


.typeColumn {
  > span {
    vertical-align: top;
  }
}

.descriptionColumn {
  > table {
    overflow: auto; // this selector is added to avoid overflow being visible when a table is rendered in the description column
  }
}
